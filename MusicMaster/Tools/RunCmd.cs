using System.Collections.Generic;
using System.Diagnostics;
using System.IO;

namespace Tools
{
    public class RunCmd
    {
        public IDictionary<string, string> RunPython3(string cmd, string args)
        {
            IDictionary<string, string> response = new Dictionary<string, string>();
            ProcessStartInfo start = new ProcessStartInfo();
            /*start.FileName = "C:\\Users\\joren\\miniconda3\\python.exe";*/ // Windows
            start.FileName = "python3";
            start.Arguments = string.Format("{0} {1}", cmd, args);
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = true; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            using (Process process = Process.Start(start))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                    string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                    response.Add("debug", stderr);
                    response.Add("output", result);
                }
            }
            return response;
        }

        public IDictionary<string, string> Run(string cmd, string args)
        {
            IDictionary<string, string> response = new Dictionary<string, string>();
            ProcessStartInfo start = new ProcessStartInfo();
            start.FileName = cmd;
            start.Arguments = string.Format("{0}", args);
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = true; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example ex$            using (Process process = Process.Start(start))
            using (Process process = Process.Start(start))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script                    string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                    string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                    response.Add("debug", stderr);
                    response.Add("output", result);
                    /*if (args == "-n")
                        throw new System.Exception("Got until process end. cmd: " + cmd + "\nargs: " + args);*/
                }
            }
            return response;
        }
    }
}
